interface PaymentProcessor {
    void processPayment(double amount);
}

class AmazonPay {
    public void makePayment(double amount) {
        System.out.println("Processing payment of $" + amount + " through AmazonPay.");
    }
}

class GooglePay {
    public void completePayment(double amount) {
        System.out.println("Processing payment of $" + amount + " through GooglePay.");
    }
}

class PayPal {
    public void sendPayment(double amount) {
        System.out.println("Processing payment of $" + amount + " through PayPal.");
    }
}

class PayPalAdapter implements PaymentProcessor {
    private PayPal payPal;

    public PayPalAdapter(PayPal payPal) {
        this.payPal = payPal;
    }

    @Override
    public void processPayment(double amount) {
        payPal.sendPayment(amount);
    }
}

class AmazonPayAdapter implements PaymentProcessor {
    private AmazonPay amazonpay;

    public AmazonPayAdapter(AmazonPay amazonpay) {
        this.amazonpay = amazonpay;
    }

    @Override
    public void processPayment(double amount) {
        amazonpay.makePayment(amount);
    }
}

class GooglePayAdapter implements PaymentProcessor {
    private GooglePay googlepay;

    public GooglePayAdapter(GooglePay googlepay) {
        this.googlepay = googlepay;
    }

    @Override
    public void processPayment(double amount) {
        googlepay.completePayment(amount);
    }
}

public class Main {
    public static void main(String[] args) {
        PaymentProcessor paypalProcessor = new PayPalAdapter(new PayPal());
        PaymentProcessor amazonpayProcessor = new AmazonPayAdapter(new AmazonPay());
        PaymentProcessor googlepayProcessor = new GooglePayAdapter(new GooglePay());

        paypalProcessor.processPayment(100.50);
        amazonpayProcessor.processPayment(200.30);
        googlepayProcessor.processPayment(300.80);
    }
}
